---

- name: Install ntp
  apt:
     name: "{{ item }}"
     state: present
     update_cache: yes
  loop:
    - ntp
    - curl
    - apt-transport-https
    - ca-certificates 
    - software-properties-common

##### Docker 
- name:  getting apt-key.gpg for docker
  shell:
    cmd: "{{ item }}"
  loop:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    - add-apt-repository  "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"

- name: Install docker
  apt:
     name: "{{ item }}"
     state: present
     update_cache: yes
  loop:
    - docker-ce={{ docker_ce_ubuntu }}

- name: Setup docker daemon.
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: Copy docker deamon iles
  template: src=daemon.json.j2  dest=/etc/docker/daemon.json
  notify: restart docker      

##### K8      
- name:  getting apt-key.gpg Kubernetes
  shell:
    cmd: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg |  apt-key add -

- name: Creating a repository file for Kubernetes
  file:
    path: /etc/apt/sources.list.d/kubernetes.list
    state: touch

- name: Adding repository details in Kubernetes repo file.
  blockinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    block: |
         deb https://apt.kubernetes.io/ kubernetes-xenial main   

- name: Install kubelet kubeadm kubectl
  apt:
     name: "{{ item }}"
     state: present
     update_cache: yes
  loop:
    - kubelet={{ ubunutu_k8_version }}
    - kubectl={{ ubunutu_k8_version }}
    - kubeadm={{ ubunutu_k8_version }}

- name: Increasing fs notify max user instances and watches
  shell: sudo sysctl -w fs.inotify.max_user_instances=8192; sudo sysctl -w fs.inotify.max_user_watches=12288;
