---
- name: Ensure br_netfilter is enabled.
  shell: firewall-cmd --set-default-zone=drop; firewall-cmd --add-service=ssh --permanent; firewall-cmd --permanent --add-icmp-block-inversion; firewall-cmd --permanent --add-icmp-block=echo-reply; firewall-cmd --permanent --add-icmp-block=echo-request; firewall-cmd --permanent --add-icmp-block=time-exceeded; firewall-cmd --permanent --add-icmp-block=port-unreachable; firewall-cmd --permanent --add-port={53/tcp,53/udp,80/tcp,179/tcp,443/tcp,6443/tcp,2379-2380/tcp,4240/tcp,4240/udp,10250-10259/tcp,8472/tcp,8472/udp,4244/tcp,4245/tcp,4250/tcp,4251/tcp,6081/udp,6060/tcp,6061/tcp,6062/tcp,9878/tcp,9879/tcp,9890/tcp,9891/tcp,9893/tcp,9901/tcp,9962/tcp,9963/tcp,9964/tcp,51871/udp,9500/tcp,9501/tcp,9502/tcp,9503/tcp,8500/tcp,8501/tcp,8502/tcp,8503/tcp,8504/tcp,8000/tcp,10000-30000/tcp,3260/tcp,8002/tcp,30001-31000/tcp,2049/tcp,15010/tcp,15012/tcp,15001/tcp,15000/tcp,15002/tcp,15006/tcp,9090/tcp,3000/tcp,5775/tcp,5778/tcp,20001/tcp,9411/tcp,15003/tcp,15004/tcp,15008/tcp,15020/tcp,15021/tcp,15053/tcp,15090/tcp,32768-60999/tcp} --permanent; firewall-cmd --zone=trusted --add-source=10.96.0.0/12 --permanent; firewall-cmd --zone=trusted --add-source=10.244.0.0/16 --permanent; firewall-cmd --reload;

- name: Ensure br_netfilter is enabled.
  modprobe:
    name: br_netfilter
    state: present

- name: creating containerd config directory
  file:
    path: /etc/cni/net.d
    state: directory

- name: creating containerd config directory
  file:
    path: /etc/containerd
    state: directory

- name: Copy docker deamon iles
  template: src="{{ item.src }}" dest="{{ item.dest }}"
  with_items:
     - { src: 'config.toml.j2', dest: '/etc/containerd/config.toml' }  
     - { src: 'k8s.conf.modules.j2', dest: '/etc/sysctl.d/k8s.conf' }  
     - { src: 'containerd.conf.j2', dest: '/etc/modules-load.d/containerd.conf' }       
     - { src: '99-kubernetes-cri.conf.j2', dest: '/etc/sysctl.d/99-kubernetes-cri.conf' }  
     - { src: '10-containerd-net.conflist.j2' , dest: '/etc/cni/net.d/10-containerd-net.conflist' }

- name: disable service yum-cron, if running
  systemd:
    name: yum-cron
    enabled: false
  ignore_errors: yes 

- name: set bridge-nf-call-iptables
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    sysctl_set: yes
    state: present
    reload: yes
  ignore_errors: yes

- name: ip_forward
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    state: present
    reload: yes
  ignore_errors: yes

- name: install yum-utils device-mapper-persistent-data lvm2
  yum:
     name: "{{ item }}"
     state: present
     update_cache: yes
  loop:
    - yum-utils
    - device-mapper-persistent-data
    - lvm2

- name: Add repository docker-ce
  shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

- name: install containerd.io docker-ce docker-ce-cli 
  yum:
     name: "{{ item }}"
     state: present
     update_cache: yes
  loop:
    - containerd.io

- name: Disable SELinux
  selinux:
    state: disabled
  ignore_errors: yes

- name: Disable SELinux
  shell: setenforce 0
  ignore_errors: yes

- name: Creating a repository file for Kubernetes
  file:
     path: /etc/yum.repos.d/kubernetes.repo
     state: touch

- name: Restart service containerd on ubuntu
  systemd:
    enabled: yes
    name: containerd
    state: restarted
    daemon_reload: yes

#- name: Adding repository details in Kubernetes repo file.
#  blockinfile:
#    path: /etc/yum.repos.d/kubernetes.repo
#    block: |
#      [kubernetes]
#      name=Kubernetes
#      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
#      enabled=1
#      gpgcheck=1
#      repo_gpgcheck=1
#      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
#        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- name: Adding repository details in Kubernetes repo file for rhel
  blockinfile:
    path: /etc/yum.repos.d/kubernetes.repo
    block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

# -{{ redhat_k8_version }}
- name: Install kubelet kubeadm kubectl
  yum:
     name: "{{ item }}"
     state: present
     update_cache: yes
  loop:
    - kubelet
    - kubectl
    - kubeadm
  notify: restart kubelet

- name: /etc/systemd/system/kubelet.service.d
  file:
    path: /etc/systemd/system/kubelet.service.d 
    state: directory

- name: kubelet configuration
  template: src=0-cri-containerd.conf.j2 dest=/etc/systemd/system/kubelet.service.d/0-cri-containerd.conf

- name: Increasing fs notify max user instances and watches
  shell: sudo sysctl -w fs.inotify.max_user_instances=8192; sudo sysctl -w fs.inotify.max_user_watches=12288;
