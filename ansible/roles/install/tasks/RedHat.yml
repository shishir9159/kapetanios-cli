---
- name: Ensure br_netfilter is enabled.
  modprobe:
    name: br_netfilter
    state: present

- name: creating containerd config directory
  file:
    path: /etc/cni/net.d
    state: directory

- name: creating containerd config directory
  file:
    path: /etc/containerd
    state: directory

- name: Copy docker deamon iles
  template: src="{{ item.src }}" dest="{{ item.dest }}"
  with_items:
     - { src: 'config.toml.j2', dest: '/etc/containerd/config.toml' }  
     - { src: 'k8s.conf.modules.j2', dest: '/etc/sysctl.d/k8s.conf' }  
     - { src: 'containerd.conf.j2', dest: '/etc/modules-load.d/containerd.conf' }       
     - { src: '99-kubernetes-cri.conf.j2', dest: '/etc/sysctl.d/99-kubernetes-cri.conf' }  
     - { src: '10-containerd-net.conflist.j2' , dest: '/etc/cni/net.d/10-containerd-net.conflist' }

- name: disable service yum-cron, if running
  systemd:
    name: yum-cron
    enabled: false
  ignore_errors: yes 

- name: set bridge-nf-call-iptables
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    sysctl_set: yes
    state: present
    reload: yes
  ignore_errors: yes

- name: ip_forward
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    state: present
    reload: yes
  ignore_errors: yes

- name: install yum-utils device-mapper-persistent-data lvm2
  yum:
     name: "{{ item }}"
     state: present
     update_cache: yes
  loop:
    - yum-utils
    - device-mapper-persistent-data
    - lvm2

- name: Add repository docker-ce
  shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

- name: install containerd.io docker-ce docker-ce-cli 
  yum:
     name: "{{ item }}"
     state: present
     update_cache: yes
  loop:
    - containerd.io-{{ containerd_ce_redhat }}

- name: Disable SELinux
  selinux:
    state: disabled
  ignore_errors: yes

- name: Disable SELinux
  shell: setenforce 0
  ignore_errors: yes

- name: Creating a repository file for Kubernetes
  file:
     path: /etc/yum.repos.d/kubernetes.repo
     state: touch

- name: Restart service containerd on ubuntu
  systemd:
    enabled: yes
    name: containerd
    state: restarted
    daemon_reload: yes

- name: Adding repository details in Kubernetes repo file.
  blockinfile:
    path: /etc/yum.repos.d/kubernetes.repo
    block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- name: Install kubelet kubeadm kubectl
  yum:
     name: "{{ item }}"
     state: present
     update_cache: yes
  loop:
    - kubelet-{{ redhat_k8_version }}
    - kubectl-{{ redhat_k8_version }}
    - kubeadm-{{ redhat_k8_version }} 
  notify: restart kubelet

- name: /etc/systemd/system/kubelet.service.d
  file:
    path: /etc/systemd/system/kubelet.service.d 
    state: directory

- name: kubelet configuration
  template: src=0-cri-containerd.conf.j2 dest=/etc/systemd/system/kubelet.service.d/0-cri-containerd.conf

- name: Increasing fs notify max user instances and watches
  shell: sudo sysctl -w fs.inotify.max_user_instances=8192; sudo sysctl -w fs.inotify.max_user_watches=12288;
