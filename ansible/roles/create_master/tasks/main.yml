---
- name: create config directory for kubeadm
  file:
    path: /etc/kubernetes/kubeadm/
    state: directory

- name: shell
  shell: |
    while IFS=$': \t' read -a line; \
    do [ -z "${line%inet}" ] && if [ $(echo -n ${line[1]} | wc -m) -gt 4 ]; then     ip=${line[1]}; else     ip=${line[2]}; fi && [ "${ip#127.0.0.1}" ] && myip=$ip; \
    done< <(LANG=C /sbin/ifconfig); echo $myip;
  register: internal_ip
  ignore_errors: true
  args:
    executable: /bin/bash

- name: Copy kube config files
  template: src="{{ item.src }}" dest="{{ item.dest }}"
  with_items:
     - { src: 'kubeadm-config.yaml.j2', dest: '/etc/kubernetes/kubeadm/kubeadm-config.yaml'  }  
  when: >
    inventory_hostname in groups['kube_master'] and
    groups['kube_master'].index(inventory_hostname) == 0

- name: Copy kube config files
  template: src="{{ item.src }}" dest="{{ item.dest }}"
  with_items:
     - { src: 'audit-policy.yaml.j2', dest: '/etc/kubernetes/audit-policy.yaml'  }  
  when: >
    inventory_hostname in groups['kube_master']

- name: shell
  shell: kubeadm init --config=/etc/kubernetes/kubeadm/kubeadm-config.yaml --upload-certs
  when: >
    inventory_hostname in groups['kube_master'] and
    groups['kube_master'].index(inventory_hostname) == 0

- name: shell
  shell: mkdir -p $HOME/.kube; sudo cp /etc/kubernetes/admin.conf $HOME/.kube/config; sudo chown $(id -u):$(id -g) $HOME/.kube/config
  when: >
    inventory_hostname in groups['kube_master'] and
    groups['kube_master'].index(inventory_hostname) == 0
